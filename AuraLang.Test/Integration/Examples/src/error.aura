mod main

import aura/io

fn main() {
	// Here, the variable `e` has a type of `error`
	e := f()
	// Error values contain an error message, which we can access using the `message` method. This method is built onto the error type, so we can call it
	// by placing it after the type, separated by a dot.
	io.printf("%v\n", e.message())
}

// The `error` type in Aura is a regular value (i.e. Aura does not support exceptions). Error types can be returned from a function and accepted as a parameter,
// just like any other type in Aura.
fn f() -> error {
	// The built-in `err()` function returns an Aura type containing the supplied string argument. This method is included in Aura's prelude, so you don't need
	// to import any modules to use it.
	return err("Helpful error message")
}
